1
00:00:00,600 --> 00:00:01,740
С возвращением, все.

2
00:00:02,340 --> 00:00:09,060
В последнем видео мы узнаем о настройке аутентификации Google для входа в наше приложение.

3
00:00:10,020 --> 00:00:16,410
Тем не менее, есть одна вещь, которую я хочу прояснить, если вы заглянете внутрь своей вкладки аутентификации.

4
00:00:16,980 --> 00:00:19,830
здесь вы увидите своего пользователя, под которым вы вошли.

5
00:00:20,640 --> 00:00:26,910
Одна вещь, однако, заключается в том, что этот список пользователей, который вы будете получать всякий раз, когда вы входите в систему с этими разными

6
00:00:26,910 --> 00:00:32,610
службы аутентификации, будь то Google, вход или любой из этих других методов входа, которые

7
00:00:32,610 --> 00:00:34,080
доступны, которые вы можете добавить.

8
00:00:34,830 --> 00:00:40,230
Ранее мы добавили в Google, но вы можете войти в Facebook в GitHub, подписать и отправить по электронной почте.

9
00:00:40,230 --> 00:00:41,130
подпись пароля.

10
00:00:41,700 --> 00:00:47,730
Все эти различные службы аутентификации добавляются в ваш список пользователей внутри

11
00:00:47,730 --> 00:00:48,750
вкладка аутентификация.

12
00:00:49,350 --> 00:00:54,540
Но это не обязательно пользователи, доступные в вашей базе данных Firestar.

13
00:00:54,900 --> 00:00:55,920
Так что это важная вещь.

14
00:00:55,920 --> 00:01:02,700
Я хочу пояснить, что служба аутентификации, которую вы здесь используете, является отдельной службой от службы Fire.

15
00:01:02,700 --> 00:01:03,630
База данных магазина.

16
00:01:04,080 --> 00:01:10,500
Fire Store — это фактическая база данных, которую мы собираемся использовать внутри Firebase.

17
00:01:10,740 --> 00:01:16,340
Это очень похоже на базу данных без схемы, поэтому schema.

18
00:01:16,350 --> 00:01:19,110
Это просто означает, что это в значительной степени объект JSON.

19
00:01:19,380 --> 00:01:22,290
Вы можете хранить любые поля, которые являются значениями, которые вы хотите.

20
00:01:23,250 --> 00:01:30,420
Конечно, обычно вы хотите, чтобы это было более согласованным, чтобы ваши данные были согласованными между пользователями,

21
00:01:30,930 --> 00:01:36,210
это означает, что если вы получаете пользователя один против пользователя тысяча, вы можете быть уверены, что форма данных

22
00:01:36,210 --> 00:01:38,490
то же самое, что означает, что у них одинаковые поля.

23
00:01:38,490 --> 00:01:43,440
Возможно, у них одинаковое поле имени и поле фамилии с любым значением этих пользователей.

24
00:01:43,440 --> 00:01:43,890
будет.

25
00:01:44,220 --> 00:01:45,900
Но вы хотите, чтобы это постоянство.

26
00:01:46,820 --> 00:01:52,670
Здесь загляните внутрь, и вы заметите, что хотя мы аутентифицировали нашего пользователя, на самом деле мы не

27
00:01:52,670 --> 00:01:55,730
есть какие-либо пользователи внутри нашего пожарного магазина.

28
00:01:56,480 --> 00:02:02,360
Итак, что мы собираемся сделать сейчас, мы собираемся убедиться, что всякий раз, когда пользователь аутентифицируется, мы также

29
00:02:02,360 --> 00:02:06,500
создайте запись о них внутри Firestorm.

30
00:02:07,400 --> 00:02:12,440
Итак, теперь мы начнем фактически хранить информацию об этом пользователе в нашей базе данных.

31
00:02:12,770 --> 00:02:14,930
Итак, мы собираемся начать работу с огненной базой данных.

32
00:02:15,910 --> 00:02:20,560
Теперь, прежде чем мы начнем работать с нами, нам нужно понять пару вещей об Firestorm.

33
00:02:21,220 --> 00:02:26,740
у него довольно интересная структура, и нужно немного времени, чтобы привыкнуть к ней

34
00:02:26,740 --> 00:02:27,430
работать с ним.

35
00:02:27,850 --> 00:02:29,320
Но мы собираемся пройти через это в этом видео.

36
00:02:29,620 --> 00:02:31,960
Итак, сначала я покажу вам слайд-шоу.

37
00:02:32,950 --> 00:02:35,500
Итак, давайте поговорим о модели данных на основе огня.

38
00:02:36,480 --> 00:02:40,620
Внутри Firestorm действительно содержит данные о трех вещах.

39
00:02:40,860 --> 00:02:46,980
Есть коллекция, есть документ, а есть данные.

40
00:02:47,550 --> 00:02:54,270
Эта визуализация очень хороша, потому что она похожа на просмотр папки внутри папки.

41
00:02:54,270 --> 00:02:57,360
У вас может быть несколько документов в каждом документе.

42
00:02:57,360 --> 00:03:01,050
Данные, относящиеся к этому документу, — это то, что написано в этом документе.

43
00:03:01,860 --> 00:03:08,790
Так что можете представить, что если бы у нас была коллекция пользователей, мы бы сделали отдельную папку с пользователями

44
00:03:08,790 --> 00:03:15,090
на нем, чтобы мы знали, что внутри этой папки находятся все наши данные, относящиеся к каждому экземпляру

45
00:03:15,090 --> 00:03:17,610
пользователя, который находится внутри нашей базы данных.

46
00:03:18,700 --> 00:03:25,390
Каждый отдельный документ представляет собой отдельный фрагмент данных, поэтому независимый пользователь.

47
00:03:26,050 --> 00:03:29,860
Теперь фактическая информация относится к тому, что пользователь будет данными.

48
00:03:30,100 --> 00:03:31,000
Итак, давайте пройдемся по этому.

49
00:03:32,190 --> 00:03:33,720
Сначала поговорим о модели документа.

50
00:03:34,500 --> 00:03:38,880
Модель документа — это на самом деле самые маленькие единицы внутри огненной бури.

51
00:03:39,660 --> 00:03:45,060
Итак, представьте, что у нас есть обувь, потому что мы являемся коронной одеждой, что означает, что мы продаем одежду.

52
00:03:45,360 --> 00:03:53,400
Итак, представьте, что у нас есть уникальный идентификатор для этого конкретного документа об обуви и его Nike Air Max.

53
00:03:53,430 --> 00:03:54,510
Это просто уникальная сила.

54
00:03:55,780 --> 00:04:02,770
Это Nike Air Max внутри, у нас будут данные, которые расскажут вам, какая информация об обуви будет

55
00:04:02,770 --> 00:04:03,040
быть.

56
00:04:03,520 --> 00:04:05,950
Таким образом, имя будет Air Max в виде строки.

57
00:04:06,220 --> 00:04:08,980
Бренд — Nike, а затем URL-адрес изображения.

58
00:04:08,980 --> 00:04:11,680
Представьте, что это указывает на некоторый URL реального изображения.

59
00:04:12,340 --> 00:04:13,750
Это форма данных.

60
00:04:14,260 --> 00:04:19,300
Это объект JSON, который содержит информацию, относящуюся к обуви.

61
00:04:20,430 --> 00:04:28,130
Теперь, если вы посмотрите внутрь этой модели, может быть, иногда до сих пор, некоторые из этих полей могут быть вложенными,

62
00:04:28,140 --> 00:04:31,290
поэтому стоимость на самом деле может быть другим объектом JSON.

63
00:04:32,070 --> 00:04:36,840
До сих пор то, что мы видели с именем, брендом и URL-адресом изображения, это один уровень, означающий, что он просто указывает

64
00:04:36,840 --> 00:04:39,870
к одному значению, в данном случае являющемуся строкой.

65
00:04:40,350 --> 00:04:48,300
Принимая во внимание, что стоимость здесь, возможно, является объектом JSON, в котором есть два поля, цена, которая может быть числом.

66
00:04:48,600 --> 00:04:50,880
а затем валюта, в которой указана эта цена.

67
00:04:50,880 --> 00:04:52,380
Итак, USD, это строка.

68
00:04:52,890 --> 00:04:58,560
Так что есть кое-что интересное, что вы хотите знать о документах, это то, что они в значительной степени JSON.

69
00:04:58,560 --> 00:05:04,650
объекты, но на самом деле это только большая часть того, как наши отдельные фрагменты данных будут получать

70
00:05:04,650 --> 00:05:05,130
хранится.

71
00:05:05,940 --> 00:05:12,390
Итак, если бы вы посмотрели на модель Nike Air Max здесь, на эту уникальную строку без пробелов, это было бы

72
00:05:12,390 --> 00:05:15,300
имя этого документа или идея этого документа.

73
00:05:15,960 --> 00:05:19,980
В то время как здесь, внизу, вся эта информация внутри одного, это данные.

74
00:05:19,980 --> 00:05:23,970
Итак, я сопоставляю серый цвет с данными, а затем синий с документом.

75
00:05:24,690 --> 00:05:29,760
Так что это одна вещь, о которой вы хотите знать, когда вы хотите получить доступ к информации, связанной с

76
00:05:29,760 --> 00:05:30,300
документ.

77
00:05:30,540 --> 00:05:34,170
Помните, что вы пытаетесь получить данные для этого документа.

78
00:05:35,130 --> 00:05:38,760
Теперь давайте поговорим о коллекциях, чтобы мы знали, что говорим об обуви.

79
00:05:39,180 --> 00:05:43,380
Итак, представьте, что у нас есть коллекция обуви внутри этой обуви, коллекция.

80
00:05:43,560 --> 00:05:51,030
У нас может быть наш пример Nike Air Max, который является просто документом о обуви, живущей внутри нашей обуви.

81
00:05:51,030 --> 00:05:51,540
коллекция.

82
00:05:52,260 --> 00:05:58,740
Но тогда у нас также может быть Adidas NMD, еще один документ, предназначенный для другой конкретной обуви.

83
00:05:58,920 --> 00:06:01,440
И вы заметите, что форма снова выглядит очень похожей.

84
00:06:01,680 --> 00:06:07,980
Все они имеют имя, бренд, изображение, URL-адрес и стоимость, которая является объектом, указывающим на цену и валюту.

85
00:06:08,670 --> 00:06:12,420
Итак, вы увидите, что структура та же, но значения разные.

86
00:06:12,750 --> 00:06:18,450
И все потому, что, опять же, обувь коллекции Nike Air Max и Adidas NMD.

87
00:06:18,450 --> 00:06:23,250
Это уникальные строки, которые представляют идею этих отдельных отдельных документов.

88
00:06:24,030 --> 00:06:28,350
И тогда значения внутри - это данные, соответствующие этим документам.

89
00:06:29,160 --> 00:06:35,130
Таким образом, любые данные, которые мы собираемся хранить в Firebase, в целом будут соответствовать этой модели коллекций.

90
00:06:35,310 --> 00:06:37,620
документы, а затем их соответствующие данные.

91
00:06:38,010 --> 00:06:43,890
Итак, теперь, когда у нас есть приблизительное общее представление об этом, давайте начнем реализовывать и работать.

92
00:06:43,890 --> 00:06:46,530
с Firestar, храните нашу базу данных с учетом этого.

93
00:06:46,830 --> 00:06:48,780
Так что увидимся в следующем видео, где мы начнем это делать.
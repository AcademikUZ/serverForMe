1
00:00:00,480 --> 00:00:01,350
С возвращением, все.

2
00:00:02,130 --> 00:00:06,390
В этом видео мы собираемся использовать фрагменты информации, которую мы только что узнали, у нас есть

3
00:00:06,390 --> 00:00:10,770
эта ссылка на пользовательский документ и из этой ссылки на пользовательский документ мы получили снимок.

4
00:00:11,100 --> 00:00:16,530
Моментальный снимок позволяет нам проверить, существует ли его экземпляр внутри базы данных,

5
00:00:16,530 --> 00:00:19,020
и это также позволяет нам получить доступ к данным.

6
00:00:20,130 --> 00:00:21,330
Итак, как мы это сделаем?

7
00:00:21,840 --> 00:00:23,010
Как мы собираемся настроить наш код?

8
00:00:23,610 --> 00:00:25,530
Что ж, давайте сначала напишем псевдокод.

9
00:00:26,220 --> 00:00:32,370
Что я хочу сделать, так это сначала проверить, существуют ли пользовательские данные.

10
00:00:32,880 --> 00:00:35,700
Если да, то я ничего не хочу делать.

11
00:00:35,730 --> 00:00:40,200
Я просто хочу вернуть эту ссылку на пользовательский документ.

12
00:00:42,440 --> 00:00:48,590
Однако, если данные не существуют, скажем, если пользовательские данные не существуют.

13
00:00:49,810 --> 00:00:54,680
Итак, вот что происходит, если пользовательские данные существуют, если пользовательские данные не существуют.

14
00:00:54,730 --> 00:01:05,260
Что я хочу сделать, так это создать набор документов с данными из User Auth в моей коллекции,

15
00:01:05,740 --> 00:01:10,600
и я хочу установить его с помощью этого снимка пользователя, потому что помните, что он уже указывает на конкретный

16
00:01:10,600 --> 00:01:13,300
место в коллекции для данных, которые мы хотим.

17
00:01:13,900 --> 00:01:15,910
Итак, чтобы сделать это, я собираюсь сказать сначала.

18
00:01:15,910 --> 00:01:20,860
Если это так, я собираюсь использовать оператор bhang, что означает, что если снимок.

19
00:01:23,040 --> 00:01:26,100
Существует, так что помните, это дает нам логическое значение.

20
00:01:26,460 --> 00:01:31,690
Итак, если он существует, он вернет true, если он не существует, он даст нам false и с треском.

21
00:01:31,710 --> 00:01:32,670
Я обращаю это.

22
00:01:33,060 --> 00:01:38,190
Так что это означает, что если он не существует, это вернет true, если он не существует, потому что если он

23
00:01:38,190 --> 00:01:40,920
не существует, то я хочу создать и установить документ.

24
00:01:41,520 --> 00:01:45,060
Итак, чтобы сделать это, мне нужно снять отображаемое имя.

25
00:01:46,370 --> 00:01:53,120
И я хочу, чтобы электронная почта от арт-пользователя была отключена от объекта, если вы помните, это поля, которые находятся на этом объекте.

26
00:01:53,120 --> 00:01:54,620
наряду с нашим единством.

27
00:01:56,020 --> 00:02:02,560
И затем, что я также хочу сделать, я хочу сделать просто креатив, так что это будет просто

28
00:02:02,560 --> 00:02:04,510
новый объект даты.

29
00:02:05,050 --> 00:02:08,380
Таким образом, мы знаем, когда эти пользователи входят в систему.

30
00:02:09,470 --> 00:02:13,370
Затем, чтобы установить этот документ, нам нужен блок try catch.

31
00:02:14,240 --> 00:02:18,830
Если вы не знаете, какая дорожка вызывается, по сути, это просто означает, что я хочу, чтобы вы попробовали что-то асинхронное.

32
00:02:19,430 --> 00:02:23,660
Если что-то, что вы пытаетесь сделать здесь, выдает ошибку, вы поймаете эту ошибку и пойдете

33
00:02:23,660 --> 00:02:25,580
сделать что-то с ним в этом блоке.

34
00:02:26,330 --> 00:02:29,900
Итак, что мы собираемся попробовать, так это попытаться установить документ.

35
00:02:30,260 --> 00:02:35,720
Итак, как мы знаем, если get doc получает документ, то set doc позволяет нам установить документ.

36
00:02:36,320 --> 00:02:43,100
Точно так же мы собираемся передать ему ссылку на документ пользователя, которую мы только что получили с помощью

37
00:02:43,100 --> 00:02:46,850
doc, а затем мы собираемся передать данные, которые мы хотим настроить.

38
00:02:47,390 --> 00:02:49,550
Итак, здесь мы хотим установить отображаемое имя.

39
00:02:50,120 --> 00:02:52,440
Мы хотим установить электронную почту.

40
00:02:52,880 --> 00:02:55,220
И мы хотим установить дату создания.

41
00:02:56,300 --> 00:02:58,430
И это почти все, что нам нужно.

42
00:03:00,020 --> 00:03:01,490
Кроме того, что насчет воздуха?

43
00:03:02,510 --> 00:03:08,000
Ну, что я собираюсь сделать, так это занести в консоль сообщение о том, что при создании пользователя произошла ошибка,

44
00:03:08,150 --> 00:03:12,440
и я также собираюсь зарегистрировать сообщение об ошибке, которое исходит от ошибки.

45
00:03:13,780 --> 00:03:17,950
Так что это все, что произойдет, если наш снимок пользователя не существует.

46
00:03:18,970 --> 00:03:22,420
Но что произойдет, если пользовательские данные существуют?

47
00:03:22,870 --> 00:03:28,540
Итак, если он существует, то он даже не будет работать, потому что он вернет true, верно?

48
00:03:28,570 --> 00:03:34,610
Существует снимок пользователя, который перевернет челку, поэтому он оценивает значение false, означающее все эти настройки.

49
00:03:34,780 --> 00:03:35,860
что пропустит.

50
00:03:36,520 --> 00:03:40,300
Таким образом, мы можем просто вернуть ссылку на документ пользователя.

51
00:03:43,950 --> 00:03:44,820
Просто чтобы убедиться.

52
00:03:45,900 --> 00:03:48,210
Давайте просто сохраним этот код и посмотрим, что произойдет.

53
00:03:48,510 --> 00:03:49,770
Итак, давайте просто пройдем через это еще раз.

54
00:03:50,220 --> 00:03:52,050
Мы проверили, существует ли этот снимок.

55
00:03:52,530 --> 00:03:57,580
Если он не существует, то мы хотим установить его внутри нашей базы данных.

56
00:03:57,810 --> 00:04:00,480
Итак, мы просто говорим: «Эй, установите документ с этим объектом».

57
00:04:02,900 --> 00:04:09,770
Итак, что мы собираемся сделать здесь, мы просто собираемся здесь стоимость.

58
00:04:11,020 --> 00:04:16,690
Ссылка на документ пользователя, потому что теперь мы знаем, что бы ни случилось, мы должны получить ссылку на документ.

59
00:04:19,000 --> 00:04:22,430
И я хочу дождаться этого, потому что, опять же, это асинхронный шаг.

60
00:04:23,660 --> 00:04:25,760
На самом деле, нам пока даже не нужно ничего этого делать.

61
00:04:26,090 --> 00:04:28,490
Мы действительно можем увидеть это прямо в нашей коллекции, если это работает.

62
00:04:29,180 --> 00:04:30,260
Итак, давайте просто проверим это.

63
00:04:30,980 --> 00:04:32,210
Итак, позвольте мне обновить это.

64
00:04:34,680 --> 00:04:35,850
Позвольте мне вызвать всплывающее окно.

65
00:04:39,140 --> 00:04:40,820
Позвольте мне войти в мою учетную запись Google.

66
00:04:42,540 --> 00:04:46,800
И вот снова мы видим, что это, конечно же, ложь, потому что мы просто написали код для нашей коллекции.

67
00:04:46,800 --> 00:04:47,550
в первый раз.

68
00:04:48,270 --> 00:04:52,800
А теперь, если мы зайдем в нашу базу данных и обновим ее.

69
00:05:00,220 --> 00:05:05,800
Мы видим, что теперь у нас есть коллекция пользователя, и вот он, наш пользователь, созданный сегодня.

70
00:05:06,670 --> 00:05:10,120
Так что это действительно здорово, потому что это все, что нам действительно нужно.

71
00:05:10,600 --> 00:05:18,730
Теперь мы можем аутентифицировать наших пользователей, позволив им войти, но также теперь мы можем просто обновить наш

72
00:05:18,730 --> 00:05:22,270
база данных со всеми этими аутентифицированными пользователями и их соответствующими данными.

73
00:05:22,900 --> 00:05:26,290
Итак, теперь мы создали способ создания пользователей.

74
00:05:27,460 --> 00:05:32,950
Так что это действительно удобно, потому что, используя эту систему, у нас теперь есть аутентификация, а также хранение

75
00:05:32,950 --> 00:05:40,750
эти пользователи внутри нашего приложения аутентификация и пользователи, как правило, очень сложная функция

76
00:05:40,750 --> 00:05:43,570
построить, потому что это включает в себя серверы, серверные части и все такое.

77
00:05:43,930 --> 00:05:49,300
Но здесь мы добились этого с помощью Firebase, и нам просто нужно было немного изучить firebase по ходу дела.

78
00:05:49,300 --> 00:05:49,570
путь.

79
00:05:50,740 --> 00:05:51,370
Так вот оно.

80
00:05:52,060 --> 00:05:53,680
Теперь мы создаем пользовательские документы.

81
00:05:53,920 --> 00:05:56,320
Теперь у нас есть эти документы и ссылки.

82
00:05:56,590 --> 00:05:58,960
Мы можем использовать их для входа и выхода пользователей.

83
00:05:59,620 --> 00:06:01,000
Это довольно хорошо сейчас.

84
00:06:01,300 --> 00:06:04,480
Мы можем начать использовать это внутри нашего приложения.

85
00:06:05,840 --> 00:06:10,760
Прежде чем мы сделаем что-либо из этого, давайте просто убедимся, что мы также зафиксировали наши изменения.

86
00:06:11,510 --> 00:06:14,660
Так что мы хотим сделать, мы хотим, чтобы двигаться вперед.

87
00:06:15,680 --> 00:06:24,080
Давайте просто зафиксируем наше сообщение о том, что мы добавили наш компонент входа, а также firebase

88
00:06:24,080 --> 00:06:29,180
utils и добавил библиотеки Firebase.

89
00:06:31,090 --> 00:06:32,380
И тогда мы можем подтолкнуть это.

90
00:06:34,630 --> 00:06:35,620
Вот и все.

91
00:06:36,430 --> 00:06:42,900
Итак, теперь, когда мы находимся на этапе, у нас есть некоторые служебные функции Firebase, мы добавили Firebase,

92
00:06:42,910 --> 00:06:44,860
у нас есть наш компонент регистрации, начинающийся.

93
00:06:45,550 --> 00:06:46,990
Переходим к следующему видео.

94
00:06:47,020 --> 00:06:48,490
Что ж, мы продолжим конкретизировать это.